@mixin mq-below($breakpoint) {
    $value: breakpoint($breakpoint);

    @if $value != null {
        @media (max-width: $value) { @content; }
    } @else {
        @media (max-width: $breakpoint) { @content; }
    }
}


@mixin mq-above($breakpoint) {
    $value: breakpoint($breakpoint);

    @if $value != null {
        @media (min-width: $value + 1) { @content; }
    } @else {
        @media (min-width: $breakpoint + 1) { @content; }
    }
}


@mixin ie-only() {
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) { @content; }
}


@mixin ios-safari-only() {
    @supports (-webkit-overflow-scrolling: touch) { @content; }
}


@mixin mq($options) {
    $above: map_get($options, above);
    $below: map-get($options, below);
    $browser: map-get($options, browser);
    @if $browser != null {
        @if $browser == 'ie' {
            @include ie-only {
                @include mq((above: $above, below: $below)) { @content }
            }
        } @else if $browser == 'ios-safari' {
            @include ios-safari-only {
                @include mq((above: $above, below: $below)) { @content }
            }
        }
    } @else if $above != null and $below != null {
        @include mq-above($above) {
            @include mq-below($below) { @content; }
        }
    } @else if $above != null {
        @include mq-above($above) { @content; }
    } @else if $below != null {
        @include mq-below($below) { @content; }
    } @else {
        @warn 'mq must be passed a map with an above or below key';
    }
}

@mixin responsive-font($options) {
    $min-size: map-get($options, min-size);
    $max-size: map-get($options, max-size);
    $lower-bound: map-get($options, lower-bound);
    $upper-bound: map-get($options, upper-bound);

    $max-minus-min: strip-unit($max-size) - strip-unit($min-size);

    @if(index('rem', unit($min-size)) != null and index('rem', unit($max-size)) != null) {
        $base-rem: 10;
        $upper-minus-lower: strip-unit($upper-bound / $base-rem) - strip-unit($lower-bound / $base-rem);
        $lower-bound-rems: #{strip-unit($lower-bound / $base-rem)}rem;

        font-size: calc(#{$min-size} + #{$max-minus-min} * ((100vw - #{$lower-bound-rems}) / #{$upper-minus-lower}));
    } @else {
        $upper-minus-lower: strip-unit($upper-bound) - strip-unit($lower-bound);
        font-size: calc(#{$min-size} + #{$max-minus-min} * ((100vw - #{$lower-bound}) / #{$upper-minus-lower}));
    }

    @include mq-below($lower-bound) {
        font-size: $min-size;
    }

    @include mq-above($upper-bound) {
        font-size: $max-size;
    }
}

@mixin spacing($options) {
    $top-large: map-get($options, top-large);
    $bottom-large: map-get($options, bottom-large);
    $top-small: map-get($options, top-small);
    $bottom-small: map-get($options, bottom-small);

    @if($top-large != null) {
        &.top-spacing-large {
            padding-top: $top-large;

            @include mq-below(small) {
                padding-top: $top-large / 2;
            }

            &:first-child {
                padding-top: $top-large * 2;

                @include mq-below(small) {
                    padding-top: $top-large;
                }
            }
        }
    }

    @if($top-small != null) {
        &.top-spacing-small {
            padding-top: $top-small;

            @include mq-below(small) {
                padding-top: $top-small / 2;
            }

            &:first-child {
                padding-top: $top-small * 2;

                @include mq-below(small) {
                    padding-top: $top-small;
                }
            }
        }
    }

    @if($bottom-large != null) {
        &.bottom-spacing-large {
            padding-bottom: $bottom-large;

            @include mq-below(small) {
                padding-bottom: $bottom-large / 2;
            }
        }
    }

    @if($bottom-small != null) {
        &.bottom-spacing-small {
            padding-bottom: $bottom-small;
        }

        @include mq-below(small) {
            padding-bottom: $bottom-small / 2;
        }
    }
}
